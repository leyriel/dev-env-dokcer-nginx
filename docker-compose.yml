version: '3'
services:
    jenkins:
        image: bitnami/jenkins:latest
        container_name: jenkins_server_container
        restart: always
        user: root
        ports:
            - '8888:8080'
            - '8889:8443'
        environment:
            - JENKINS_PASSWORD=Velodrome3512621          
            - JENKINS_USERNAME=Leyriel  
        volumes:
            - ./web/jenkins/bitnami:/bitnami
    web:
        image: nginx
        container_name: nginx_web_server
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/letsencrypt/:/etc/letsencrypt/"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            - "3000:443"
            - "81:81"
            - "82:82"
            - "83:83"
            - "84:84"
            - "85:85"
            - "86:86"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/bash -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: php:7.2-fpm
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
    composer:
        image: "composer"
        command: install --ignore-platform-reqs
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
    mysqldb:
        image: mysql:5.7.22
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.0.1
        environment:
            - cluster.name=demo
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
    kibana:
        image: docker.elastic.co/kibana/kibana:6.0.1
        links:
            - elasticsearch
        ports:
            - 5601:5601  
    haproxy:
        build: ./haproxy
        container_name: haproxy
        ports:
            - "80:80"
            - "443:443"
            - "3512:3512"
            - "9898:9898"
        restart: always
        volumes:
            - "./etc/ssl/webrise.pem:/etc/ssl/webrise.pem"
            - "./etc/atelier-bee.pem:/etc/ssl/atelier-bee.pem"
            - "./etc/letsencrypt/live:/etc/letsencrypt/live"
            - "./haproxy/log/400.http:/etc/haproxy/errors/400.http"
            - "./haproxy/log/403.http:/etc/haproxy/errors/403.http"
            - "./haproxy/log/408.http:/etc/haproxy/errors/408.http"
            - "./haproxy/log/500.http:/etc/haproxy/errors/500.http"
            - "./haproxy/log/502.http:/etc/haproxy/errors/502.http"
            - "./haproxy/log/503.http:/etc/haproxy/errors/503.http"
            - "./haproxy/log/504.http:/etc/haproxy/errors/504.http"          




